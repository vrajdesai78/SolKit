import React, { FC } from 'react';
import { TransactionResult } from './useTransaction';

interface TransactionStatusProps {
  result: TransactionResult;
  status: 'idle' | 'processing' | 'success' | 'error';
  showExplorerLink?: boolean;
  network?: string;
}

export const TransactionStatus: FC<TransactionStatusProps> = ({
  result,
  status,
  showExplorerLink = true,
  network = 'devnet'
}) => {
  if (status === 'idle') {
    return null;
  }

  const getExplorerUrl = (signature: string): string => {
    let cluster = '';
    if (network !== 'mainnet-beta') {
      cluster = `?cluster=${network}`;
    }
    return `https://explorer.solana.com/tx/${signature}${cluster}`;
  };

  return (
    <div className="mt-4">
      {status === 'processing' && (
        <div className="flex items-center p-3 bg-blue-50 text-blue-700 rounded-md">
          <svg
            className="animate-spin h-5 w-5 mr-2"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
          >
            <circle
              className="opacity-25"
              cx="12"
              cy="12"
              r="10"
              stroke="currentColor"
              strokeWidth="4"
            ></circle>
            <path
              className="opacity-75"
              fill="currentColor"
              d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
            ></path>
          </svg>
          <span>Processing transaction...</span>
        </div>
      )}

      {status === 'success' && result.signature && (
        <div className="p-3 bg-green-50 text-green-700 rounded-md">
          <div className="font-medium">Transaction successful!</div>
          {showExplorerLink && (
            <div className="text-sm mt-1">
              <a
                href={getExplorerUrl(result.signature)}
                target="_blank"
                rel="noopener noreferrer"
                className="underline hover:text-green-800"
              >
                View on Solana Explorer
              </a>
            </div>
          )}
        </div>
      )}

      {status === 'error' && result.error && (
        <div className="p-3 bg-red-50 text-red-700 rounded-md">
          <div className="font-medium">Transaction failed</div>
          <div className="text-sm mt-1">
            {result.error.message || 'Unknown error'}
          </div>
        </div>
      )}
    </div>
  );
}; 